@page "{GroupId}"
@using StaticPoll = Delta.Polling.Base.Polls.Statics;
@model Delta.Polling.WebRP.Pages.Member.Groups.DetailsModel

@{
    ViewBag.CurrentMenu = MenuFor.MemberGroupIndex;
}

@await Component.InvokeAsync("ErrorViewer", Model.Problem)

@if (Model.Problem == null)
{
    ViewData["Title"] = Model.GroupItem.Name;

    if (TempData["success"] is not null)
    {
        <div class="alert alert-primary alert-dismissible fade show col-5" role="alert">
            <strong>Success!</strong> @TempData["success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    if (TempData["failed"] is not null)
    {
        <div class="alert alert-danger alert-dismissible fade show col-5" role="alert">
            <strong>Failed!</strong> @TempData["failed"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Index">
                    Home
                </a>
            </li>
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Member/Index">
                    Member
                </a>
            </li>
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Member/Groups/Index">
                    My Groups
                </a>
            </li>
            <li class="breadcrumb-item active"
                aria-current="page">
                @ViewData["Title"]
            </li>
        </ol>
    </nav>


    <div class="container mt-4">
        <!-- Group Header -->
        <div class="group-header">
            <h1>@Model.GroupItem.Name</h1>
            <p class="lead">Welcome to the group! Here's an overview of the group details.</p>
        </div>

        <!-- List of Members with Pop-Up -->
        <div class="mb-4">
            <h2 class="mb-3">Members</h2>
            <p class="mb-2">Click the button below to view all members.</p>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#memberModal">
                View All Members
            </button>
        </div>

        <div class="section-divider"></div>

        <!-- List of Polls -->
        <div>
            <h2 class="mb-3">Polls</h2>
            <form id="form-create-group" asp-page-handler="AddPoll" method="post" class="col-8">
                <input type="hidden" asp-for="@Model.Input.GroupId" value="@Model.GroupId" class="form-control" required>

                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPoll">
                    Create Poll inside this group
                </button>

                <!-- Modal -->
                <div class="modal fade" id="addPoll" tabindex="-1" aria-labelledby="addPoll" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addPollLabel">Create Poll </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label asp-for="@Model.Input.Title" class="form-label"></label>
                                    <input type="text" asp-for="@Model.Input.Title" class="form-control" maxlength="@StaticPoll.MaxLengthFor.Title" required>
                                    <span asp-validation-for="@Model.Input.Title" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="@Model.Input.Question" class="form-label"></label>
                                    <input type="text" asp-for="@Model.Input.Question" class="form-control" maxlength="@StaticPoll.MaxLengthFor.Question" required>
                                    <span asp-validation-for="@Model.Input.Question" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="@Model.Input.MaximumAnswer" class="form-label"></label>
                                    <input type="number" asp-for="@Model.Input.MaximumAnswer" class="form-control" min="@StaticPoll.MinValueFor.MaximumAnswer" max="@StaticPoll.MaxValueFor.MaximumAnswer" required>
                                    <span asp-validation-for="@Model.Input.MaximumAnswer" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="@Model.Input.AllowOtherChoice" class="form-label text-warning"></label>
                                    <select asp-for="@Model.Input.AllowOtherChoice" class="form-control" required>
                                        <option value="true">True</option>
                                        <option value="false">False</option>
                                    </select>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Create</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="section-divider">
                <form method="post" asp-page-handler="SearchQuery">
                    <div class="search-container">
                        <input asp-for="@Model.QuerySearch" type="text" class="search-bar" placeholder="Search..." onfocus="showTooltip()"
                               onblur="hideTooltip()"/>
                        <button type="submit" class="btn btn-primary mt-3">
                            <i class="bi bi-search"></i> Search
                        </button>
                        <div class="accordion" id="accordionExample">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingOne">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        Search Rules
                                    </button>
                                </h2>
                                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <ul>
                                                    <li>SortField: Created; SortOrder: 0</li>
                                                    <li>SearchField: Title; SearchText: a</li>
                                                    <li>Page: 1; PageSize: 5</li>
                                                    <li>SearchField: MeAlreadyVote; SearchText: true</li>
                                                </ul>
                                            </div>
                                            <div class="col-md-6">
                                                <ul>
                                                    <li>SortField: Created; SortOrder: 1</li>
                                                    <li>SearchField: Status; SearchText: Ongoing</li>
                                                    <li>SearchField: Status; SearchText: Draft</li>
                                                    <li>SortField: Created; SortOrder: 0;Page:1;PageSize:5</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </form>
            </div>
            <div style="height:500px">
                <div style="height:70%" class="scrollable-content">
                    <div class="list-group mb-4">
                        @foreach (var poll in Model.GroupItem.PollItems.Items)
                        {
                            @* <div class="list-group-item">
                    <h5>@poll.Title</h5>
                    <p class="text-muted">
                    Created on: @poll.Created.ToString("MMM dd, yyyy HH:mm")<br />
                    Status: <span>@poll.Status</span>
                    </p>
                    </div> *@

                            <a asp-page="/Member/Polls/Details" asp-route-pollId="@poll.Id" class="list-group-item list-group-item-action">
                                <h5>@poll.Title</h5>
                                <p class="text-muted">
                                    Created on: @poll.Created.ToString("MMM dd, yyyy HH:mm")<br />
                                    Status: <span>@poll.Status</span>
                                </p>
                            </a>
                        }
                    </div>
                </div>
                <div style="height:30%">
                    @Html.Raw(Model.Paging)
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Member List -->
    <div class="modal fade" id="memberModal" tabindex="-1" aria-labelledby="memberModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="memberModalLabel">Members</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Filter or search box -->
                    <div class="mb-3">
                        <input id="form-search-member" type="text" class="form-control" id="memberSearch" placeholder="Search members...">
                    </div>
                    <!-- List of Members in Modal -->
                    <ul id="list-member" class="list-group">
                        @foreach (var memberItem in Model.GroupItem.MemberItems)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>@memberItem</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <button id="backToTop" class="btn btn-primary" aria-label="Back to top">
        <i class="bi bi-arrow-up"></i>
    </button>
}

<script>

    $(document).ready(function () {
        $('#form-search-member').on('change keyup blur', function () {
            var filter = $(this).val().toLowerCase();
            $('#list-member .list-group-item').each(function () {
                var text = $(this).text().toLowerCase();
                let matches = text.indexOf(filter) > -1
                if (matches) {
                    this.style.setProperty('display', 'block', 'important');
                }
                else { 
                    this.style.setProperty('display', 'none', 'important');
                }

            });
        });

        $.validator.unobtrusive.parse("#form-create-group");

        $('input, select, textarea').not('#form-search-member').on('change keyup blur', function () {
            $(this).valid();
        });
    });

    $(document).ready(function () {
        const backToTopButton = document.getElementById('backToTop')

        backToTopButton.addEventListener('click', function () {

            document.getElementById('main-content').scrollTo({ top: 0, behavior: 'smooth' });
        });
    });


</script>

<style>
    .group-header {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        text-align: center;
    }

        .group-header h1 {
            margin: 0;
        }

    .section-divider {
        margin: 30px 0;
        border-top: 2px solid #e9ecef;
    }

    .list-group-item {
        border-radius: 8px;
    }

    .modal-content {
        border-radius: 8px;
    }

    .pagination {
        margin: 20px 0;
    }

    #backToTop {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #007bff;
        color: #fff;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: opacity 0.3s ease;
    }

        #backToTop:hover {
            background-color: #0056b3;
        }

    .scrollable-content {
        overflow-y: auto; /* Adds vertical scrollbar if content overflows */
        max-height: 100%; /* Adjust if needed */
    }

    .search-container {
        position: relative;
        /* Position the container relative to handle absolute positioning of the tooltip */
    }

    .search-bar {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
</style>


