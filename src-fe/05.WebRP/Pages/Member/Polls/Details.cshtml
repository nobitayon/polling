@page "{pollId}"
@using Delta.Polling.Base.Polls.Enums;
@using Delta.Polling.FrontEnd.Services.CurrentUser;
@using StaticChoice = Delta.Polling.Base.Choices.Statics;
@inject ICurrentUserService currentUserService;
@model Delta.Polling.WebRP.Pages.Member.Polls.DetailsModel

@{
    ViewBag.CurrentMenu = MenuFor.MemberPollsIndex;
}

@await Component.InvokeAsync("ErrorViewer", Model.Error)

@if (Model.Poll is not null)
{
    ViewData["Title"] = Model.Poll.Title;

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Index">
                    Home
                </a>
            </li>
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Member/Polls/Index">
                    Polls
                </a>
            </li>
            <li class="breadcrumb-item active"
                aria-current="page">
                @ViewData["Title"]
            </li>
        </ol>
    </nav>

    @if (TempData["success"] is not null)
    {
        <div class="alert alert-primary alert-dismissible fade show col-5" role="alert">
            <strong>Success!</strong> @TempData["success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["failed"] is not null)
    {
        <div class="alert alert-danger alert-dismissible fade show col-5" role="alert">
            <strong>Failed!</strong> @TempData["failed"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Poll.Status is PollStatus.Draft && Model.Poll.CreatedBy == currentUserService.Username)
    {
        <!-- Polling Information Section -->
        <div class="mb-4 p-3 border rounded bg-light">
            <h4 class="mb-3">Polling Basic Information</h4>
            <p><strong>Title:</strong> @Model.Poll.Title</p>
            <p><strong>Group Name:</strong> Dummy Group Name</p>
            <p><strong>Created At:</strong> @Model.Poll.Created</p>
            <p><strong>Created By:</strong> @Model.Poll.CreatedBy</p>

            <div class="mt-3">
                @if (Model.Poll.ChoiceItems.Count() > 0)
                {
                    <a id="start-poll" data-poll-id="@Model.PollId" class="btn btn-primary me-2">Start Poll</a>
                }
                <a id="update-poll" data-poll-id="@Model.PollId" class="btn btn-primary me-2">Update Poll</a>
                <a id="delete-poll" data-poll-id="@Model.PollId" class="btn btn-primary me-2">Delete Poll</a>
            </div>
        </div>

        <!-- Rules Section -->
        <div class="mb-4 p-3 border rounded bg-light">
            <h4 class="mb-3">Rules</h4>
            @if (Model.Poll.AllowOtherChoice)
            {
                <p><strong>Can Add More Choices:</strong> Yes</p>
            }
            else
            {
                <p><strong>Can Add More Choices:</strong> No</p>
            }

            <p><strong>Maximum Answers Allowed:</strong> @Model.Poll.MaximumAnswer</p>
        </div>

        <!-- Poll Details Section -->
        <div class="p-3 border rounded bg-light">
            <h4 class="mb-3">Poll Details</h4>
            <p><strong>Question:</strong> @Model.Poll.Question</p>
            <ul class="list-group mb-3">
                @foreach (var choice in Model.Poll.ChoiceItems)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @choice.Description
                        <div>
                            <a class="btn btn-primary btn-sm me-2" onclick="handleEdit()" data-poll-id="@Model.PollId" data-choice-id="@choice.Id">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a class="btn btn-sm btn-primary me-2" onclick="handleDelete()" data-choice-id="@choice.Id">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                    </li>
                }
            </ul>
            <form id="add-choice" asp-page-handler="AddChoice" method="post" class="col-8">
                <input type="hidden" asp-for="@Model.InputAddChoiceCommand.PollId" value="@Model.PollId" class="form-control" required>

                <!-- Button trigger modal -->
                <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addChoice">
                    Add Choice
                </a>

                <!-- Modal -->
                <div class="modal fade" id="addChoice" tabindex="-1" aria-labelledby="addChoice" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addChoiceLabel">Add Choice </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label asp-for="@Model.InputAddChoiceCommand.Description" class="form-label"></label>
                                    <input type="text" asp-for="@Model.InputAddChoiceCommand.Description" class="form-control" maxlength="@StaticChoice.MaxLengthFor.Description" required>
                                    <span asp-validation-for="@Model.InputAddChoiceCommand.Description" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Add Choice</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    }
    else if (Model.Poll.Status is PollStatus.Ongoing)
    {
        <!-- Polling Information Section -->
        <div class="mb-4 p-3 border rounded bg-light">
            <h4 class="mb-3">Polling Basic Information</h4>
            <p><strong>Title:</strong> @Model.Poll.Title</p>
            <p><strong>Group Name:</strong> Dummy Group Name</p>
            <p><strong>Created At:</strong> @Model.Poll.Created</p>
            <p><strong>Created By:</strong> @Model.Poll.CreatedBy</p>

            <div class="mt-3">
                @if (Model.Poll.CreatedBy == currentUserService.Username)
                {
                    <a id="finish-poll" data-poll-id="@Model.PollId" class="btn btn-primary me-2">Finish Poll</a>
                }

            </div>
        </div>

        <!-- Rules Section -->
        <div class="mb-4 p-3 border rounded bg-light">
            <h4 class="mb-3">Rules</h4>
            @if (Model.Poll.AllowOtherChoice)
            {
                <p><strong>Can Add More Choices:</strong> Yes</p>
            }
            else
            {
                <p><strong>Can Add More Choices:</strong> No</p>
            }

            <p><strong>Maximum Answers Allowed:</strong> @Model.Poll.MaximumAnswer</p>
        </div>

        <!-- Poll Details Section -->
        <div class="p-3 border rounded bg-light">
            <h4 class="mb-3">Poll Details</h4>
            <p><strong>Question:</strong> @Model.Poll.Question</p>
            <a class="btn btn-primary me-2" asp-page="AddAnotherChoice" asp-route-pollId="@Model.PollId">
                Add Another Choice(open new page)
            </a>
            @if (Model.Poll.MaximumAnswer > 1)
            {
                <form id="form-input-update" asp-page-handler="@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")" method="post" class="col-8">

                    @if (Model.Poll.AnswerItems.Count() > 0)
                    {
                        <input type="hidden" asp-for="@Model.InputUpdateVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                    }
                    else
                    {
                        <input type="hidden" asp-for="@Model.InputAddVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                    }

                    <!-- Modal -->
                    <div class="modal fade" id="checkBoxVote" tabindex="-1" aria-labelledby="checkBoxVote" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="checkBoxVoteLabel">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote") </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    Anda akan mensubmit pilihan anda ?
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <ul class="list-group mb-3">
                        @foreach (var choice in Model.Poll.ChoiceItems)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="form-check">
                                    <input id="@choice.Id"
                                           class="form-check-input"
                                           type="checkbox"
                                           value="@choice.Id"
                                           name="listChoices"
                                           data-val="true"
                                           data-val-maxchecked="You can only select up to @Model.Poll.MaximumAnswer options."
                                           data-val-maxchecked-maxcount="@Model.Poll.MaximumAnswer"
                                           data-val-maxchecked-selector="input[name='listChoices']"
                                    @(choice.IsChosen ? "checked" : "")>

                                    <label class="form-check-label" for="@choice.Id">
                                        @choice.Description
                                    </label>

                                    <span id="message-validation-checkbox" class="text-danger"></span>

                                </div>
                            </li>
                        }
                    </ul>

                    <a class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#checkBoxVote">
                        @(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")
                    </a>

                </form>
            }
            else
            {
                <form id="form-input-update" asp-page-handler="@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")" method="post" class="col-8">

                    @if (Model.Poll.AnswerItems.Count() > 0)
                    {
                        <input type="hidden" asp-for="@Model.InputUpdateVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                    }
                    else
                    {
                        <input type="hidden" asp-for="@Model.InputAddVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                    }

                    <!-- Modal -->
                    <div class="modal fade" id="radioButtonVote" tabindex="-1" aria-labelledby="radioButtonVote" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="radioButtonVoteLabel">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote") </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    Anda akan mensubmit pilihan anda ?
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <ul class="list-group mb-3">
                        @foreach (var choice in Model.Poll.ChoiceItems)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="form-check">
                                    <input id="@choice.Id"
                                           class="form-check-input"
                                           type="radio"
                                           value="@choice.Id"
                                           name="listChoices"
                                    @(choice.IsChosen ? "checked" : "")>
                                    <label class="form-check-label" for="pollOption">
                                        @choice.Description
                                    </label>
                                </div>
                            </li>
                        }
                    </ul>


                    <!-- Button trigger modal -->
                    <a class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#radioButtonVote">
                        @(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")
                    </a>
                </form>
            }
        </div>
    }
    else
    {
        <!-- Polling Information Section -->
        <div class="mb-4 p-3 border rounded bg-light">
            <h4 class="mb-3">Polling Basic Information</h4>
            <p><strong>Title:</strong> @Model.Poll.Title</p>
            <p><strong>Group Name:</strong> Dummy Group Name</p>
            <p><strong>Created At:</strong> @Model.Poll.Created</p>
            <p><strong>Created By:</strong> @Model.Poll.CreatedBy</p>
        </div>

        <!-- Rules Section -->
        <div class="mb-4 p-3 border rounded bg-light">
            <h4 class="mb-3">Rules</h4>
            @if (Model.Poll.AllowOtherChoice)
            {
                <p><strong>Can Add More Choices:</strong> Yes</p>
            }
            else
            {
                <p><strong>Can Add More Choices:</strong> No</p>
            }

            <p><strong>Maximum Answers Allowed:</strong> @Model.Poll.MaximumAnswer</p>
        </div>

        <!-- Poll Details Section -->
        <div class="p-3 border rounded bg-light">
            <h4 class="mb-3">Poll Details</h4>
            <p><strong>Question:</strong> @Model.Poll.Question</p>
            <ul class="list-group mb-3">
                @foreach (var choice in Model.Poll.ChoiceItems)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center @(choice.IsChosen ? "chosen" : "")">
                        @choice.Description
                    </li>
                }
            </ul>
            @{
                var maxVote = Model.Poll.ChoiceItems
                .Select(c => c.NumVote)
                .Max();
            }
            @if (maxVote > 0)
            {
                <strong>Winner:</strong>
                @foreach (var choice in Model.Poll.ChoiceItems)
                {
                    @if (choice.NumVote == maxVote)
                    {
                        <div>
                            <span class="badge bg-success">
                                @choice.Description - <span class="badge bg-light text-dark">@choice.NumVote Votes</span>
                            </span>
                        </div>
                    }
                }
            }
        </div>
    }
}

<script type="text/javascript" language=javascript>

    const addAnotherChoiceButton = document.getElementById('add-another-choice');
    if (addAnotherChoiceButton) {
        document.getElementById('add-another-choice').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`${pollId}?handler=AddAnotherChoice`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Add Another Choice");
                    $('#form-modal').modal('show');
                })
        });
    }

    $.validator.addMethod("maxChecked", function (value, element, params) {
        var checkedCount = $(params.selector).filter(":checked").length;
        var isValid = checkedCount <= params.maxCount;
        return isValid;
    }, "You can only select up to {0} options.");

    $.validator.unobtrusive.adapters.add("maxchecked", ["maxcount", "selector"], function (options) {
        options.rules["maxChecked"] = {
            selector: options.params.selector,
            maxCount: options.params.maxcount
        };
        options.messages["maxChecked"] = options.message;
    });

    $(document).ready(function () {
        if ($("#form-input-update").length) {
            $("#form-input-update").validate({
                errorPlacement: function (error, element) {
                    $("#message-validation-checkbox").html(error);
                }
            });

            // Validate the form when checkboxes change
            $("input[name='listChoices']").on("change", function () {
                $("#form-input-update").valid();
            });
        }
    });

    const startPollButton = document.getElementById('start-poll');
    if (startPollButton) {
        document.getElementById('start-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`${pollId}?handler=StartPoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Start Poll");
                    $('#form-modal').modal('show');
                })
        });
    }

    const finishPollButton = document.getElementById('finish-poll');
    if (finishPollButton) {
        document.getElementById('finish-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`?handler=FinishPoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Finish Poll");
                    $('#form-modal').modal('show');
                })
        });
    }

    const deletePollButton = document.getElementById('delete-poll');
    if (deletePollButton) {
        document.getElementById('delete-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`?handler=DeletePoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Delete Poll");
                    $('#form-modal').modal('show');
                })
        });
    }

    const updatePollButton = document.getElementById('update-poll');
    if (updatePollButton) {
        document.getElementById('update-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`?handler=UpdatePoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Update Poll");
                    $('#form-modal').modal('show');
                    $.validator.unobtrusive.parse('#update-poll');
                    $('input, select, textarea').on('change keyup blur', function () {
                        $(this).valid();
                    });
                })
        });
    }

    function handleEdit() {
        let aElement = event.target.closest('a');
        let pollId = aElement.getAttribute('data-poll-id');
        let choiceId = aElement.getAttribute('data-choice-id');
        fetch(`${pollId}?handler=EditChoice&choiceId=${choiceId}`)
            .then((response) => {
                return response.text();
            })
            .then((htmlText) => {
                $('#form-modal .modal-body').html(htmlText);
                $('#form-modal .modal-title').html("Edit Choice");
                $('#form-modal').modal('show');
                $.validator.unobtrusive.parse('#edit-choice');
                $('input, select, textarea').on('change keyup blur', function () {
                    $(this).valid();
                });
            })
    }

    function handleDelete() {
        let aElement = event.target.closest('a');
        let choiceId = aElement.getAttribute('data-choice-id');
        fetch(`?handler=DeleteChoice&choiceId=${choiceId}`)
            .then((response) => {
                return response.text();
            })
            .then((htmlText) => {
                $('#form-modal .modal-body').html(htmlText);
                $('#form-modal .modal-title').html("Delete Choice");
                $('#form-modal').modal('show');
                $.validator.unobtrusive.parse('#delete-choice');
            })
    }


    function initChart() {
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Label 1", "Label 2", "Label 3"],
                datasets: [
                    {
                        label: 'Hasil Polling',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                        data: [20, 30, 40],
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    $(document).ready(function () {
        // Cek apakah id myChart ada

        let chartContainer = document.getElementById('myChart');

        if (chartContainer) {
            initChart();
        }

        // $('#viewAll').load('?handler=ViewTimeline');

    });
</script>

<style>
    .chosen {
        background-color: #d4edda; /* Light green background */
        color: #155724; /* Dark green text */
    }
</style>
