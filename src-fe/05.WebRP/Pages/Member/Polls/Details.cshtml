@page "{pollId}"
@using Delta.Polling.Base.Polls.Enums;
@using Delta.Polling.FrontEnd.Services.CurrentUser;
@inject ICurrentUserService currentUserService;
@model Delta.Polling.WebRP.Pages.Member.Polls.DetailsModel

@{
    ViewBag.CurrentMenu = MenuFor.MemberPollsIndex;
}

@if (Model.Poll is not null)
{
    ViewData["Title"] = Model.Poll.Title;

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Index">
                    Home
                </a>
            </li>
            <li class="breadcrumb-item">
                <a class="text-decoration-none"
                   asp-page="/Member/Polls/Index">
                    Polls
                </a>
            </li>
            <li class="breadcrumb-item active"
                aria-current="page">
                @ViewData["Title"]
            </li>
        </ol>
    </nav>

    @if (TempData["success"] is not null)
    {
        <div class="alert alert-primary alert-dismissible fade show col-5" role="alert">
            <strong>Success!</strong> @TempData["success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["failed"] is not null)
    {
        <div class="alert alert-danger alert-dismissible fade show col-5" role="alert">
            <strong>Failed!</strong> @TempData["failed"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <section class="mb-4">

        <div class="row">
            <div class="col-md-12 justify-content-center mt-3">
                <div class="card mb-3">
                    <div class="card-body">
                        <h1> @Model.Poll.Title </h1>
                        <small>Status : @Model.Poll.Status</small>
                        <br />
                        <small>Created : @Model.Poll.Created</small>
                        <br />
                        <small>Created By : @Model.Poll.CreatedBy</small>
                        <br />
                        @if (Model.Poll.Modified != null)
                        {
                            <small>Last Modified : @Model.Poll.Modified</small>
                            <br />
                            <small>Modified By : @Model.Poll.Modified</small>
                            <br />
                        }
                        <small>Allow Other Choice : @Model.Poll.AllowOtherChoice</small>
                        <br />
                        <small>Maximum Answers : @Model.Poll.MaximumAnswer</small>
                        <br />
                        <p class="card-text">Some dummy text that I wrote</p>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.Poll.Status is PollStatus.Draft)
        {
            @if (currentUserService.Username == Model.Poll.CreatedBy)
            {
                <a id="start-poll" data-poll-id="@Model.PollId" class="btn btn-primary">Start Poll</a>
                <a id="update-poll" data-poll-id="@Model.PollId" class="btn btn-primary">Update Poll</a>
                <a id="delete-poll" data-poll-id="@Model.PollId" class="btn btn-primary">Delete Poll</a>
            }
        }

        @if (Model.Poll.Status is PollStatus.Ongoing)
        {
            @if (currentUserService.Username == Model.Poll.CreatedBy)
            {
                <a id="finish-poll" data-poll-id="@Model.PollId" class="btn btn-primary">Finish Poll</a>
            }
        }

    </section>

    <div class="row">
        <div class="col-md-12 justify-content-center mt-3">
            <div class="card mb-3">
                <div class="card-body">
                    <h1 class="text-center"> @Model.Poll.Question </h1>
                    @if (Model.Poll.Status is PollStatus.Ongoing)
                    {
                        @if (Model.Poll.MaximumAnswer > 1)
                        {
                            <form id="form-input-update" asp-page-handler="@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")" method="post" class="col-8">

                                @if (Model.Poll.AnswerItems.Count() > 0)
                                {
                                    <input type="hidden" asp-for="@Model.InputUpdateVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                                }
                                else
                                {
                                    <input type="hidden" asp-for="@Model.InputAddVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                                }

                                <!-- Modal -->
                                <div class="modal fade" id="checkBoxVote" tabindex="-1" aria-labelledby="checkBoxVote" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="checkBoxVoteLabel">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote") </h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                Anda akan mensubmit pilihan anda ?
                                            </div>

                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @foreach (var choice in Model.Poll.ChoiceItems)
                                {
                                    <div class="form-check">
                                        <input id="@choice.Id"
                                               class="form-check-input"
                                               type="checkbox"
                                               value="@choice.Id"
                                               name="listChoices"
                                        @(choice.IsChosen ? "checked" : "")>

                                        @{
                                            //TODO: Ganti label dengan sesuatu
                                        }
                                        <label class="form-check-label" for="@choice.Id">
                                            @choice.Description
                                        </label>
                                    </div>
                                }
                                <!-- Button trigger modal -->

                                <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#checkBoxVote">
                                    @(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")
                                </a>
                            </form>
                        }
                        else
                        {
                            <form id="form-input-update" asp-page-handler="@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")" method="post" class="col-8">

                                @if (Model.Poll.AnswerItems.Count() > 0)
                                {
                                    <input type="hidden" asp-for="@Model.InputUpdateVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                                }
                                else
                                {
                                    <input type="hidden" asp-for="@Model.InputAddVoteCommand.PollId" value="@Model.PollId" class="form-control" required>
                                }

                                <!-- Modal -->
                                <div class="modal fade" id="radioButtonVote" tabindex="-1" aria-labelledby="radioButtonVote" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="radioButtonVoteLabel">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote") </h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                Anda akan mensubmit pilihan anda ?
                                            </div>

                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">@(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @foreach (var choice in Model.Poll.ChoiceItems)
                                {
                                    <div class="form-check">
                                        <input id="@choice.Id"
                                               class="form-check-input"
                                               type="radio"
                                               value="@choice.Id"
                                               name="listChoices"
                                        @(choice.IsChosen ? "checked" : "")>
                                        <label class="form-check-label" for="pollOption">
                                            @choice.Description
                                        </label>
                                    </div>
                                }

                                <!-- Button trigger modal -->
                                <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#radioButtonVote">
                                    @(Model.Poll.AnswerItems.Count() > 0 ? "UpdateVote" : "AddVote")
                                </a>

                            </form>
                        }
                    }
                    else if (Model.Poll.Status is PollStatus.Draft)
                    {
                        <div class="container">
                            <div class="row">
                                @foreach (var choice in Model.Poll.ChoiceItems)
                                {
                                    <div class="col-2 mb-3">
                                        <div class="card card-selection" data-value="@choice.Description">
                                            <div class="card-body d-flex justify-content-between align-items-center">
                                                <h5 class="card-title mb-0">@choice.Description</h5>
                                                <div class="btn-group">
                                                    <a class="btn btn-danger btn-sm me-2" onclick="handleDelete()" data-choice-id="@choice.Id">
                                                        <i class="bi bi-trash"></i>
                                                    </a>
                                                    <a class="btn btn-primary btn-sm" onclick="handleEdit()" data-poll-id="@Model.PollId" data-choice-id="@choice.Id">
                                                        <i class="fa fa-edit"></i>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>


                    }
                    else if (Model.Poll.Status is PollStatus.Finished)
                    {
                        @if(Model.Poll.AnswerItems.Count() > 0)
                        {
                            @foreach (var choice in Model.Poll.ChoiceItems)
                            {
                                <div class="col-md-4 mb-3">
                                    <div class="card card-selection" data-value="@choice.Description" style="background-color: @(choice.IsChosen ? "#28a745" : "")">
                                        <div class="card-body text-center">
                                            <h5 class="card-title">@choice.Description</h5>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    @if (Model.Poll.Status is PollStatus.Draft && currentUserService.Username == Model.Poll.CreatedBy)
    {
        <form id="add-choice" asp-page-handler="AddChoice" method="post" class="col-8">
            <input type="hidden" asp-for="@Model.InputAddChoiceCommand.PollId" value="@Model.PollId" class="form-control" required>

            <!-- Button trigger modal -->
            <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addChoice">
                Add Choice
            </a>

            <!-- Modal -->
            <div class="modal fade" id="addChoice" tabindex="-1" aria-labelledby="addChoice" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addChoiceLabel">Add Choice </h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label asp-for="@Model.InputAddChoiceCommand.Description" class="form-label"></label>
                                <input type="text" asp-for="@Model.InputAddChoiceCommand.Description" class="form-control" required>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Add Choice</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    }
    @if (Model.Poll.Status is PollStatus.Ongoing)
    {
        <a class="btn btn-primary" data-poll-id="@Model.PollId" id="add-another-choice">Add Another Choice</a>
        <a class="btn btn-primary" asp-page="AddAnotherChoice" asp-route-pollId="@Model.PollId">
            Add Another Choice(open new page)
        </a>
    }

    @if (Model.Poll.Status is PollStatus.Finished)
    {
        
         // TODO: Apakah perlu tabel untuk store hasil vote
        
        <div>
            <h3>Hasil Vote:</h3>
            @{
                int maxNumVote = Model.Poll.ChoiceItems.Max(c => c.NumVote);
                var choicesWithMaxVotes = Model.Poll.ChoiceItems
                                .Where(c => c.NumVote == maxNumVote)
                                .ToList();
            }
            <ul class="list-group">
                @foreach (var choice in choicesWithMaxVotes)
                {
                    <li class="list-group-item">@choice.Description</li>
                }
            </ul>
            

        </div>
        <a class="btn btn-primary" asp-page="ResultPoll" asp-route-pollId="@Model.PollId">Atau bikin page baru aja</a>

        @* <canvas id="myChart"></canvas> *@
        <div style="width: 504px; height: 252px;">
            <canvas id="myChart" width="504" height="252"></canvas>
        </div>
    }
}

<script type="text/javascript" language=javascript>

    const addAnotherChoiceButton = document.getElementById('add-another-choice');
    if (addAnotherChoiceButton) {
        document.getElementById('add-another-choice').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`${pollId}?handler=AddAnotherChoice`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Add Another Choice");
                    $('#form-modal').modal('show');
                })
        });
    }

    const startPollButton = document.getElementById('start-poll');
    if (startPollButton) {
        document.getElementById('start-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`${pollId}?handler=StartPoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Start Poll");
                    $('#form-modal').modal('show');
                })
        });
    }

    const finishPollButton = document.getElementById('finish-poll');
    if (finishPollButton) {
        document.getElementById('finish-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`?handler=FinishPoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Finish Poll");
                    $('#form-modal').modal('show');
                })
        });
    }

    const deletePollButton = document.getElementById('delete-poll');
    if (deletePollButton) {
        document.getElementById('delete-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`?handler=DeletePoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Delete Poll");
                    $('#form-modal').modal('show');
                })
        });
    }

    const updatePollButton = document.getElementById('update-poll');
    if (updatePollButton) {
        document.getElementById('update-poll').addEventListener('click', (event) => {
            let pollId = event.target.getAttribute('data-poll-id');
            fetch(`?handler=UpdatePoll`)
                .then((response) => {
                    return response.text();
                })
                .then((htmlText) => {
                    $('#form-modal .modal-body').html(htmlText);
                    $('#form-modal .modal-title').html("Update Poll");
                    $('#form-modal').modal('show');
                    $.validator.unobtrusive.parse('#update-poll');
                })
        });
    }

    function handleEdit() {
        let aElement = event.target.closest('a');
        let pollId = aElement.getAttribute('data-poll-id');
        let choiceId = aElement.getAttribute('data-choice-id');
        fetch(`${pollId}?handler=EditChoice&choiceId=${choiceId}`)
            .then((response) => {
                return response.text();
            })
            .then((htmlText) => {
                $('#form-modal .modal-body').html(htmlText);
                $('#form-modal .modal-title').html("Edit Choice");
                $('#form-modal').modal('show');
                $.validator.unobtrusive.parse('#edit-choice');
            })
    }

    function handleDelete() {
        let aElement = event.target.closest('a');
        let choiceId = aElement.getAttribute('data-choice-id');
        fetch(`?handler=DeleteChoice&choiceId=${choiceId}`)
            .then((response) => {
                return response.text();
            })
            .then((htmlText) => {
                $('#form-modal .modal-body').html(htmlText);
                $('#form-modal .modal-title').html("Delete Choice");
                $('#form-modal').modal('show');
                $.validator.unobtrusive.parse('#delete-choice');
            })
    }


    function initChart() {
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Label 1", "Label 2", "Label 3"],
                datasets: [
                    {
                        label: 'Hasil Polling',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1,
                        data: [20, 30, 40],
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    $(document).ready(function () {
        // Cek apakah id myChart ada

        let chartContainer = document.getElementById('myChart');

        if (chartContainer) {
            initChart();
        }

        // $('#viewAll').load('?handler=ViewTimeline');

    });
</script>
